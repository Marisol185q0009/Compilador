/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package edu.itsco;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ANN = 5;
  /** RegularExpression Id. */
  int GILBERT = 6;
  /** RegularExpression Id. */
  int MARILLA = 7;
  /** RegularExpression Id. */
  int JERRY = 8;
  /** RegularExpression Id. */
  int COOL = 9;
  /** RegularExpression Id. */
  int BASH = 10;
  /** RegularExpression Id. */
  int DIANA = 11;
  /** RegularExpression Id. */
  int RUBY = 12;
  /** RegularExpression Id. */
  int WILLIAM = 13;
  /** RegularExpression Id. */
  int BILLY = 14;
  /** RegularExpression Id. */
  int GREEN = 15;
  /** RegularExpression Id. */
  int MAY = 16;
  /** RegularExpression Id. */
  int ELIZA = 17;
  /** RegularExpression Id. */
  int RACHEL = 18;
  /** RegularExpression Id. */
  int COMENZAR = 19;
  /** RegularExpression Id. */
  int SUMA = 20;
  /** RegularExpression Id. */
  int RESTA = 21;
  /** RegularExpression Id. */
  int MULTIPLICACION = 22;
  /** RegularExpression Id. */
  int DIVISION = 23;
  /** RegularExpression Id. */
  int RESIDUO = 24;
  /** RegularExpression Id. */
  int IGUAL = 25;
  /** RegularExpression Id. */
  int AND = 26;
  /** RegularExpression Id. */
  int OR = 27;
  /** RegularExpression Id. */
  int NOT = 28;
  /** RegularExpression Id. */
  int MAYOR = 29;
  /** RegularExpression Id. */
  int MENOR = 30;
  /** RegularExpression Id. */
  int AP = 31;
  /** RegularExpression Id. */
  int CP = 32;
  /** RegularExpression Id. */
  int ALL = 33;
  /** RegularExpression Id. */
  int CLL = 34;
  /** RegularExpression Id. */
  int PC = 35;
  /** RegularExpression Id. */
  int PP = 36;
  /** RegularExpression Id. */
  int digitos = 37;
  /** RegularExpression Id. */
  int letras = 38;
  /** RegularExpression Id. */
  int ID = 39;
  /** RegularExpression Id. */
  int VALOR_ANN = 40;
  /** RegularExpression Id. */
  int VALOR_GILBERT = 41;
  /** RegularExpression Id. */
  int VALOR_MARILLA = 42;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"ann\"",
    "\"gilbert\"",
    "\"marilla\"",
    "\"jerry\"",
    "\"cool\"",
    "\"bash\"",
    "\"diana\"",
    "\"ruby\"",
    "\"william\"",
    "\"billy\"",
    "\"geen\"",
    "\"may\"",
    "\"eliza\"",
    "\"rachel\"",
    "\"comenzar\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"=\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\">\"",
    "\"<\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\":\"",
    "<digitos>",
    "<letras>",
    "<ID>",
    "<VALOR_ANN>",
    "<VALOR_GILBERT>",
    "<VALOR_MARILLA>",
  };

}
